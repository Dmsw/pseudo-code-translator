main(){
	start = 0;
	end = 9;
	for i = start to end{
		NUM[i] = 9-i;
	}
	MERGE_SORT(NUM, start, end);
	return 0;
}

MERGE(A, p, q, r){
	n1 = q - p + 1;
	n2 = r - q;
	for i = 1 to n1{
		L[i] = A[p+i-1];
	}
	for j = 1 to n2{
		R[j] = A[q+j];
	}
	L[n1+1] = INF;
	R[n2+1] = INF;
	i = 1;
	j = 1;
	for k = p to r{
		if L[i] <= R[j]{
			A[k] = L[i];
			i++;
		}
		else{
			A[k] = R[j];
			j++;
		}
	}
}

MERGE_SORT(A, p, r){
	if p < r{
		q = (p+r)/2;
		MERGE_SORT(A, p, q);
		MERGE_SORT(A, q+1, r);
		MERGE(A, p, q, r);
	}
}